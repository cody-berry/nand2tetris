// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // find our selector for our Mux4Way16
    Xor(a=load, b=inc, out=needsToBeInverted);
    Not(in=needsToBeInverted, out=selAt0);
    Xor(a=selAt0, b=reset, out=needsToBeInverted2);
    Not(in=needsToBeInverted2, out=selAt1);
    Inc16(in=outDuplicate, out=Mux2)

    Mux4Way16(a=in, b=Mux2, c=false, d=outDuplicate, sel[0]=selAt0, sel[1]=selAt1, out=registerIn);
    Or(a=load, b=inc, out=loadOrInc);
    Or(a=loadOrInc, b=reset, out=load);
    Register(in=registerIn, load=load, out=out, out[0..15]=outDuplicate);
}
