// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    /* 
        first, we should store the load bit with a DMux with the input being our load bit and the selector being our address
        then, we should have our registors with our load bits and our in[16]. We mux those outputs together with selectors of our address again and that's it! We got our output!
    */ 
    DMux(in=load, sel=address, a=);
}