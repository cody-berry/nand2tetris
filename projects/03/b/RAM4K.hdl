// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=one, b=two, c=three, d=four, e=five, f=six, g=seven, h=eight);
    RAM512(in=in, address=address[3..11], load=one, out=mux1);
    RAM512(in=in, address=address[3..11], load=two, out=mux2);
    RAM512(in=in, address=address[3..11], load=three, out=mux3);
    RAM512(in=in, address=address[3..11], load=four, out=mux4);
    RAM512(in=in, address=address[3..11], load=five, out=mux5);
    RAM512(in=in, address=address[3..11], load=six, out=mux6);
    RAM512(in=in, address=address[3..11], load=seven, out=mux7);
    RAM512(in=in, address=address[3..11], load=eight, out=mux8);
    Mux8Way16(a=mux1, b=mux2, c=mux3, d=mux4, e=mux5, f=mux6, g=mux7, h=mux8, sel=address[0..2], out=out);
}